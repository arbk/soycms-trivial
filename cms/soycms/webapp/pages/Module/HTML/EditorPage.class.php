<?php

class EditorPage extends CMSWebPageBase
{
    private $moduleId;
    private $modulePath;
    private $iniPath;

    public function doPost()
    {
        if (soy2_check_token()) {
            $edit = $_POST["Edit"];

            //禁止文字が含まれているか？
            if (!SOY2Logic::createInstance("logic.site.Module.ModuleCreateLogic")->validate($edit["name"])) {
                $this->jump("Module.HTML.Editor?invalid&moduleId=" . $_GET["moduleId"]);
            }

            //make ini
            $array = array();
            $array[] = "name=" . $edit["name"];
            $array[] = "content=" . rawurlencode($edit["content"]);

            file_put_contents($this->iniPath, implode("\n", $array));
            chmod($this->iniPath, F_MODE_FILE);

            $funcName = str_replace(".", "_", substr($this->moduleId, strpos($this->moduleId, ".")));

            //make php
            $array = array();
            $array[] = "<?php /* this script is generated by cms. */";
            $array[] = "function scms_mdl_" . $funcName . '($html,$htmlObj){';
            $array[] = "";
            $array[] = "ob_start();";
            $array[] = "";
            $array[] = "echo <<<HTML";
            $array[] = trim($edit["content"]);
            $array[] = "HTML;";
            $array[] = "";
            $array[] = "ob_end_flush();";
            $array[] = "";
            $array[] = "}";
            $array[] = "?>";
            file_put_contents($this->modulePath, implode("\n", $array));
            chmod($this->modulePath, F_MODE_FILE);
        }

        $this->jump("Module.HTML.Editor?moduleId=" . $_GET["moduleId"]);
    }

    public function __construct()
    {
        $this->moduleId = (isset($_GET["moduleId"])) ? soy2_h(str_replace("/", ".", $_GET["moduleId"])) : null;

        $moduleDir = $this->getModuleDirectory();

        $this->modulePath = $moduleDir . str_replace(".", "/", $this->moduleId) . ".php";
        $this->iniPath =$moduleDir . str_replace(".", "/", $this->moduleId) . ".ini";

        parent::__construct();

//      $ini = @parse_ini_file($this->iniPath);
        $ini = parse_ini_file($this->iniPath, false, INI_SCANNER_RAW);

        $this->addForm("form");

//      $this->addLabel("module_name_text", array(
//        "text" => (isset($ini["name"])) ? $ini["name"] : $this->moduleId
//      ));

        $this->addInput("module_name", array(
        "name" => "Edit[name]",
        "value" => isset($ini["name"]) ? $ini["name"] : $this->moduleId,
        "style" => "padding:3px; width:80%;"
        ));

        $this->addInput("module_id", array(
          "name" => "Module[id]",
          "value" => $this->moduleId,
          "disabled" => true,
        ));

        $content = (isset($ini["content"])) ? $ini["content"] : "";
        $this->addTextArea("module_content", array(
        "name" => "Edit[content]",
        "value" => $this->getModuleContent($content, file_get_contents($this->modulePath)),
        "style" => "width:100% !important; height:60vh !important;"
        ));

        $this->addLabel("module_example", array(
        "text" => "<!-- cms:module=\"html." . $this->moduleId."\" /-->\n\n" .
                "<!-- cms:module=\"html." . $this->moduleId."\" -->\n" . @$ini["name"] . "のモジュールを読み込みます.\n<!-- /cms:module=\"html." . $this->moduleId."\" -->",
        "style" => "width:80%; height:100px;"
        ));
        $this->addLabel("module_example_tmpl", array(
        "text" => "<!-- cms:module_tmpl=\"html." . $this->moduleId."\" /-->\n\n" .
                "<!-- cms:module_tmpl=\"html." . $this->moduleId."\" -->\n" . @$ini["name"] . "のモジュールを読み込みます.\n<!-- /cms:module_tmpl=\"html." . $this->moduleId."\" -->",
        "style" => "width:80%; height:100px;"
        ));
    }

    private function getModuleContent($ini, $str)
    {
        if (strlen($ini) > 0) {
            preg_match('/<<<HTML(.*)HTML;/s', $str, $match);
            return (isset($match[1])) ? trim($match[1]) : "";
        }

        $array = array();
        return implode("\n", $array);
    }

    private function getModuleDirectory()
    {
        return UserInfoUtil::getSiteDirectory() . ".module/html/";
    }
}
